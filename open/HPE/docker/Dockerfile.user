# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

# Define user arguments before usage
ARG USER=benchmark
ARG GID=1000
ARG UID=1000
ARG GROUP=benchmark

# Fix missing GPG key for Docker repository before running apt-get update
RUN mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc > /dev/null \
    && chmod a+r /etc/apt/keyrings/docker.asc \
    && echo "deb [signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable" | tee /etc/apt/sources.list.d/docker.list

# Update package lists and install required utilities
RUN apt-get update && apt-get install -y passwd sudo login docker.io

# Ensure the group exists or create it
RUN if ! getent group ${GID} > /dev/null; then groupadd -g ${GID} ${GROUP}; fi

# Find the next available UID dynamically and create the user
RUN bash -c ' \
    NEW_UID=$(awk -F: -v min=1000 -v max=60000 \
    "{ if (\$3 >= min && \$3 <= max) uids[\$3]=1 } \
    END { for (i=min; i<=max; i++) { if (!(i in uids)) { print i; exit } } }" /etc/passwd) \
    && useradd -G sudo -g ${GID} -u ${NEW_UID:-${UID}} -m -s /bin/bash ${USER} \
'

# Ensure shadow files exist and have correct permissions
RUN touch /etc/shadow /etc/gshadow \
    && chmod 640 /etc/shadow /etc/gshadow \
    && chown root:shadow /etc/shadow /etc/gshadow

# Set root and user password manually using usermod -p (hashed password)
RUN echo "root:root" | chpasswd \
    && if id "${USER}" >/dev/null 2>&1; then usermod -p $(openssl passwd -1 "compaq123") ${USER}; else echo "User ${USER} not found!"; exit 1; fi

# Set up sudo permissions and user environment
RUN echo -e "\nexport PS1=\"(mlperf) \\u@\\h:\\w\\$ \"" | tee -a /home/${USER}/.bashrc \
    && echo "%sudo ALL=(ALL:ALL) NOPASSWD:ALL" | tee -a /etc/sudoers.d/${USER} \
    && chmod 0440 /etc/sudoers.d/${USER} \
    && [ -S /var/run/docker.sock ] && chmod 666 /var/run/docker.sock || echo "Skipping chmod: /var/run/docker.sock not found"