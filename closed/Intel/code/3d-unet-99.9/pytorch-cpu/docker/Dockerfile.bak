# syntax = docker/dockerfile:experimental
# based onhttps://github.com/pytorch/pytorch/blob/master/Dockerfile
#
# NOTE: To build this you will need a docker version > 18.06 with
#       experimental enabled and DOCKER_BUILDKIT=1
#
#       If you do not use buildkit you are not going to have a good time
#
#       For reference:
#           https://docs.docker.com/develop/develop-images/build_enhancements/

ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE} AS dev-base
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get autoclean && \
    apt-get autoremove -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates \
    git \
    vim \
    numactl \
    cmake \
    unzip \
    wget \
    sudo \
    findutils \
    build-essential \
    libzstd1 \
    bc \
    && rm -rf /var/lib/apt/lists/*

RUN echo "alias ll='ls -l'" >> /root/.bashrc
ENV PATH /opt/conda/bin:$PATH

FROM dev-base as conda
ARG PYTHON_VERSION=3.9
RUN wget -O ~/miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh" && \
    chmod +x ~/miniforge3.sh && \
    bash ~/miniforge3.sh -b -p /opt/conda && \
    rm ~/miniforge3.sh && \
    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} && \
    /opt/conda/bin/conda install -y -c conda-forge mkl==2023.1.0 mkl-include==2023.1.0 && \
    /opt/conda/bin/conda install -y -c conda-forge cmake==3.26.4 jemalloc==5.2.1 gperftools==2.9.1 wheel==0.38.1 setuptools==65.5.1 future==0.18.3 numpy==1.23.5 pandas==1.5.3 && \
    /opt/conda/bin/conda install -y -c conda-forge pybind11==2.10.4 && \
    /opt/conda/bin/conda clean -ya
RUN pip install pyyaml==6.0.1 batchgenerators==0.25 nibabel==5.2.0 scipy==1.10.1 py-libnuma==1.2

FROM dev-base AS build
COPY --from=conda /opt/conda /opt/conda
COPY ./unet3d.patch unet3d.patch
ARG IPEX_VERSION=1.9.0-rc
ARG ONEDNN_VERSION=v2.7
RUN --mount=type=cache,target=/opt/ccache \
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"} && \
    export CC=`which gcc` && export CXX=`which g++` && \
    git clone https://github.com/intel/intel-extension-for-pytorch.git && \
    cd intel-extension-for-pytorch && git checkout ${IPEX_VERSION} && \
    git submodule sync && git submodule update --init --recursive && \
    cd third_party/mkl-dnn/ && git checkout ${ONEDNN_VERSION} && cd ../.. && \
    git apply ../unet3d.patch && \
    python setup.py install

FROM dev-base as mp
COPY --from=build /opt/conda /opt/conda
WORKDIR /workspace
COPY . /workspace
RUN export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"} && \
    export CC=`which gcc` && export CXX=`which g++` && \
    git clone --recurse-submodules https://github.com/mlcommons/inference.git && \
    cd inference && \
    git submodule update --init --recursive && cd loadgen && \
    CFLAGS="-std=c++14" python setup.py install && \
    cd .. && cp ./mlperf.conf /workspace/ && \
    cd /workspace/utils && \
    /opt/conda/bin/conda install -y -c conda-forge llvm-openmp==16.0.6 && \
    export CPPFLAGS='-I/opt/conda/include -I/opt/conda/include/python3.9' && \
    python -m pip install .

WORKDIR /workspace
RUN for FILE in $(cat /workspace/redactions.txt); do rm -rf /workspace/${FILE}; rm -rf /workspace/workload_code/${FILE}; done

ENV MALLOC_CONF "oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:-1,muzzy_decay_ms:-1"
ENV LD_PRELOAD "/opt/conda/lib/libiomp5.so"
ENV LD_LIBRARY_PATH "/opt/conda/lib":${LD_LIBRARY_PATH}
ENV CONDA_PREFIX "/opt/conda"
ENV MODEL_DIR=/model
ENV DATA_DIR=/data
